[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-research-assistant"
version = "1.0.0"
description = "Multi-agent AI research assistant with Researcher, Analyst, and Writer agents powered by CrewAI and Groq"
authors = [
    {name = "AI Research Team", email = "team@airesearch.com"},
]
readme = "README.md"
license = {text = "MIT"}
keywords = ["ai", "multi-agent", "research", "crewai", "groq", "llama"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
]
requires-python = ">=3.9"
dependencies = [
    "fastapi==0.110.1",
    "uvicorn==0.25.0",
    "python-dotenv>=1.0.1",
    "pymongo==4.5.0",
    "motor==3.3.1",
    "pydantic>=2.6.4",
    "crewai==0.86.0",
    "groq==0.11.0",
    "langchain==0.3.7",
    "langchain-groq==0.2.1",
    "langchain-community==0.3.7",
    "websockets==12.0",
    "requests>=2.31.0",
    "pandas>=2.2.0",
    "numpy>=1.26.0",
    "python-multipart>=0.0.9",
    "pyjwt>=2.10.1",
    "cryptography>=42.0.8",
    "email-validator>=2.2.0",
    "python-jose>=3.3.0",
    "passlib>=1.7.4",
    "typer>=0.9.0",
    "pyyaml>=6.0.1",
    "structlog>=24.1.0",
    "rich>=13.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "black>=24.1.1",
    "isort>=5.13.2",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "httpx>=0.27.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.27.0",
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.5.0",
    "mkdocs-swagger-ui-tag>=0.6.8",
]

[project.urls]
Homepage = "https://github.com/your-username/ai-research-assistant"
Documentation = "https://github.com/your-username/ai-research-assistant#readme"
Repository = "https://github.com/your-username/ai-research-assistant.git"
Issues = "https://github.com/your-username/ai-research-assistant/issues"

[project.scripts]
research-assistant = "backend.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["backend"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["backend"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=backend",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["backend"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]